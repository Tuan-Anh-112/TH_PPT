        function SolveButtonPushed(app, event)
method = app.selectedMethod;
h = app.dhh.Value;
x = app.dhgiatri.Value;

% Kiểm tra nếu các giá trị nhập vào hợp lệ
if isempty(method) || isempty(app.selectedErrorOrder)
    app.PrintfTextArea.Value = sprintf('Chưa chọn phương pháp hoặc sai số.');
    return;
end

result = 0; % Khởi tạo biến result trước khi sử dụng

% Kiểm tra xem có phải là phương pháp 'Hàm số' hay không
if strcmp(app.SelectinputtypeDropDown.Value, 'Hàm số')
    try
        fx = str2func(['@(x)' app.dhfx.Value]); % Chuyển chuỗi thành hàm
        app.PrintfTextArea.Value = sprintf('Hàm số đã được chuyển thành công.\n');
        
        switch method
            case 'forward'
                switch app.selectedErrorOrder
                    case 'O(h)'
                        result = (fx(x + h) - fx(x)) / h;
                    case 'O(h^2)'
                        result = (-fx(x + 2*h) + 4*fx(x + h) - 3*fx(x)) / (2*h);
                end
            case 'backward'
                switch app.selectedErrorOrder
                    case 'O(h)'
                        result = (fx(x) - fx(x - h)) / h;
                    case 'O(h^2)'
                        result = (3*fx(x) - 4*fx(x - h) + fx(x - 2*h)) / (2*h);
                end
            case 'central'
                switch app.selectedErrorOrder
                    case 'O(h)'
                        result = (fx(x + h) - fx(x - h)) / (2*h);
                    case 'O(h^2)'
                        result = (-fx(x + 2*h) + 8*fx(x + h) - 8*fx(x - h) + fx(x - 2*h)) / (12*h);
                end
        end
    catch ME
        app.PrintfTextArea.Value = sprintf('Lỗi khi chuyển chuỗi thành hàm:\n%s', ME.message);
        return;
    end
else
    % Trường hợp Dữ liệu x, y
    try
        % Lấy dữ liệu x, y từ các ô nhập
        x_data = str2num(app.dhx.Value);  % Chuyển chuỗi nhập thành mảng x
        y_data = str2num(app.dhy.Value);  % Chuyển chuỗi nhập thành mảng y

        % Kiểm tra xem x và y có cùng chiều dài không
        if length(x_data) ~= length(y_data)
            app.PrintfTextArea.Value = sprintf('Số lượng điểm x và y không khớp.');
            return;
        end

        % Tìm chỉ số của điểm x_val trong mảng x_data
        idx = find(x_data == x);
        
        % Kiểm tra chỉ số có hợp lệ không (tránh ra ngoài biên của mảng)
        if isempty(idx) || idx == 1 || idx == length(x_data)
            app.PrintfTextArea.Value = sprintf('Không thể tính đạo hàm tại điểm này.');
            return;
        end

        % Xử lý trường hợp sai số O(h) và O(h^2) cho phương pháp Dữ liệu x, y
        switch method
            case 'forward'
                switch app.selectedErrorOrder
                    case 'O(h)' 
                        result = (y_data(idx + 1) - y_data(idx)) / h;
                    case 'O(h^2)' 
                        result = (-y_data(idx + 2) + 4*y_data(idx + 1) - 3*y_data(idx)) / (2*h);
                end
            case 'backward'
                switch app.selectedErrorOrder
                    case 'O(h)' 
                        result = (y_data(idx) - y_data(idx - 1)) / h;
                    case 'O(h^2)' 
                        result = (3*y_data(idx) - 4*y_data(idx - 1) + y_data(idx - 2)) / (2*h);
                end
            case 'central'
                switch app.selectedErrorOrder
                    case 'O(h)' 
                        result = (y_data(idx + 1) - y_data(idx - 1)) / (2 * h);
                    case 'O(h^2)' 
                        result = (-y_data(idx + 2) + 8*y_data(idx + 1) - 8*y_data(idx - 1) + y_data(idx - 2)) / (12 * h);
                end
        end
    catch ME
        app.PrintfTextArea.Value = sprintf('Lỗi khi xử lý dữ liệu x, y:\n%s', ME.message);
        return;
    end
end

% Hiển thị kết quả
app.PrintfTextArea.Value = sprintf('Kết quả: %.2f', result);
app.dhketqua.Value = result;

        end
